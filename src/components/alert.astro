---
import type { HTMLAttributes } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";

const alertVariants = cva(
  "relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground",
  {
    variants: {
      variant: {
        default: "bg-background text-foreground",
        destructive: "border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive"
      }
    },
    defaultVariants: {
      variant: "default"
    }
  }
);

export interface Props extends HTMLAttributes<"div">, VariantProps<typeof alertVariants> {
  title?: string;
}

const { title, variant, class: className, ...props } = Astro.props;

const classes = alertVariants({ variant, class: className });
---

<div role="alert" class:list={[classes]} {...props}>
  {title && <h5 class="mb-1 font-medium leading-none tracking-tight">{title}</h5>}
  <div class="text-sm [&_p]:leading-relaxed">
    <slot />
  </div>
</div>

---
import Input from "@/components/input.astro";
import Textarea from "@/components/textarea.astro";
import Button from "@/components/button/button.astro";
import Label from "@/components/label.astro";
import Select from "@/components/select/select.astro";

const options = [
  { value: "option1", label: "Option 1" },
  { value: "option2", label: "Option 2" },
  { value: "option3", label: "Option 3" }
];
---

<form
  id="contact-form"
  action="/api/submit-form"
  method="POST"
  class="mx-auto my-12 flex w-1/2 flex-col gap-4 rounded-md border-2 border-muted-foreground p-12"
>
  <div>
    <Label for="name">Name:</Label>
    <Input type="text" id="name" name="name" required />
  </div>
  <div>
    <Label for="email">Email:</Label>
    <Input type="email" id="email" name="email" required />
  </div>
  <div>
    <Label for="message">Message:</Label>
    <Textarea id="message" name="message" required />
  </div>
  <div>
    <Label for="select">Select:</Label>
    <Select options={options} name="example-select" label="Choose an option" defaultValue="option2" size="default" />
  </div>
  <Button type="submit" label="send" class="ml-auto max-w-24">Send</Button>
  <p id="form-status" aria-live="polite"></p>
</form>

<script>
  const form = document.getElementById("contact-form") as HTMLFormElement | null;
  const formStatus = document.getElementById("form-status");

  if (form && formStatus) {
    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      formStatus.textContent = "Sending...";
      formStatus.className = "";

      try {
        const formData = new FormData(form);
        const name = formData.get("name");
        const email = formData.get("email");
        const message = formData.get("message");

        const response = await fetch(form.action, {
          method: "POST",
          body: JSON.stringify({ name, email, message })
        });

        const result = await response.json();

        if (response.ok && result.success) {
          formStatus.textContent = result.message;
          formStatus.className = "success";
          form.reset();
        } else {
          throw new Error(result.message || "Server returned an error.");
        }
      } catch (error: any) {
        formStatus.textContent = `Error: ${error.message || "There was a problem sending your message. Please try again later."}`;
        formStatus.className = "error";
        console.error("Error:", error);
      }
    });
  }
</script>

<style>
  /* ... (styles remain the same) ... */
</style>

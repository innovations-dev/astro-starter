---
interface Props {
  currentPage: number;
  totalPages: number;
  baseUrl: string;
  showCount?: number;
}

const { currentPage, totalPages, baseUrl, showCount = 5 } = Astro.props;

const generatePageLink = (page: number) => `${baseUrl}${page === 1 ? '' : `/${page}`}`;

const getVisiblePages = () => {
  const halfCount = Math.floor(showCount / 2);
  let start = Math.max(1, currentPage - halfCount);
  let end = Math.min(totalPages, start + showCount - 1);

  if (end - start + 1 < showCount) {
    start = Math.max(1, end - showCount + 1);
  }

  return Array.from({ length: end - start + 1 }, (_, i) => start + i);
};

const visiblePages = getVisiblePages();
---

<nav class="flex items-center justify-center space-x-2" aria-label="Pagination">
  <a
    href={generatePageLink(Math.max(1, currentPage - 1))}
    class={`inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors h-10 w-10 ${
      currentPage === 1 ? 'pointer-events-none opacity-50' : 'hover:bg-accent hover:text-accent-foreground'
    }`}
    aria-disabled={currentPage === 1}
  >
    <span class="sr-only">Previous page</span>
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-4 w-4"><polyline points="15 18 9 12 15 6"></polyline></svg>
  </a>
  
  {visiblePages[0] > 1 && (
    <>
      <a href={generatePageLink(1)} class="inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors h-10 w-10 hover:bg-accent hover:text-accent-foreground">1</a>
      {visiblePages[0] > 2 && <span class="inline-flex items-center justify-center h-10 w-10">...</span>}
    </>
  )}
  
  {visiblePages.map((page) => (
    <a
      href={generatePageLink(page)}
      class={`inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors h-10 w-10 ${
        currentPage === page ? 'bg-accent text-accent-foreground' : 'hover:bg-accent hover:text-accent-foreground'
      }`}
      aria-current={currentPage === page ? 'page' : undefined}
    >
      {page}
    </a>
  ))}
  
  {visiblePages[visiblePages.length - 1] < totalPages && (
    <>
      {visiblePages[visiblePages.length - 1] < totalPages - 1 && <span class="inline-flex items-center justify-center h-10 w-10">...</span>}
      <a href={generatePageLink(totalPages)} class="inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors h-10 w-10 hover:bg-accent hover:text-accent-foreground">{totalPages}</a>
    </>
  )}
  
  <a
    href={generatePageLink(Math.min(totalPages, currentPage + 1))}
    class={`inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors h-10 w-10 ${
      currentPage === totalPages ? 'pointer-events-none opacity-50' : 'hover:bg-accent hover:text-accent-foreground'
    }`}
    aria-disabled={currentPage === totalPages}
  >
    <span class="sr-only">Next page</span>
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-4 w-4"><polyline points="9 18 15 12 9 6"></polyline></svg>
  </a>
</nav>
---
import Alert from "@/components/alert.astro";
import ContactForm from "@/components/contact-form.astro";
import ModularHero from "@/components/hero/modular-hero.astro";
import LogoCarousel from "@/components/logo-carousel.astro";
import MenubarSeparator from "@/components/menubar/menubar-separator.astro";
import Layout from "@/layouts/root-layout.astro";
import MenubarContent from "../components/menubar/menubar-content.astro";
import MenubarItem from "../components/menubar/menubar-item.astro";
import MenubarMenu from "../components/menubar/menubar-menu.astro";
import MenubarTrigger from "../components/menubar/menubar-trigger.astro";
import Menubar from "../components/menubar/menubar.astro";
import "../styles/global.css";
import AlertDialog from "../components/alert-dialog/alert-dialog.astro";
import AlertDialogTitle from "../components/alert-dialog/alert-dialog-title.astro";
import AlertDialogDescription from "../components/alert-dialog/alert-dialog-description.astro";
import AlertDialogFooter from "../components/alert-dialog/alert-dialog-footer.astro";
import AlertDialogAction from "../components/alert-dialog/alert-dialog-action.astro";
import AlertDialogCancel from "../components/alert-dialog/alert-dialog-cancel.astro";
import AlertDialogTrigger from "../components/alert-dialog/alert-dialog-trigger.astro";

const menubar = [
  {
    id: "file-menu",
    label: "File",
    items: [{ label: "New File" }, { label: "Open..." }, { label: "Save" }, { label: "Exit" }]
  },
  {
    id: "edit-menu",
    label: "Edit",
    items: [
      { label: "Undo" },
      { label: "Redo" },
      { label: "Cut" },
      { label: "Copy" },
      { label: "Paste" },
      { label: "Show Sidebar" },
      { label: "Show Status Bar" }
    ]
  },
  {
    id: "view-menu",
    label: "View",
    items: [{ label: "Zoom In" }, { label: "Zoom Out" }, { label: "Show Sidebar" }, { label: "Show Status Bar" }]
  },
  {
    id: "help-menu",
    label: "Help",
    items: [{ label: "Documentation" }, { label: "Report an Issue" }, { label: "About" }]
  }
];
---

<Layout title="Home">
  <main class="relative z-0">
    <ModularHero
      title="Welcome to our website"
      description="This is a description of our website"
      layout="rightAligned"
      ctaText="Get started"
      ctaHref="/sign-up"
      imageSrc="/assets/hero-1.jpg"
      imageAlt="Hero image"
      imagePosition="background"
      gradientOverlay={{
        startColor: "#ff80b5",
        endColor: "#000000",
        opacity: 0.25
      }}
    />
    <section class="container mx-auto h-[calc(200vh-100px)]">
      <ContactForm />

      <div class="mb-8 flex justify-center">
        <Menubar>
          {
            menubar.map((menu) => (
              <MenubarMenu>
                <MenubarTrigger data-menu-id={menu.id}>{menu.label}</MenubarTrigger>
                <MenubarContent id={menu.id}>
                  {menu.items.map((item, index) => (
                    <Fragment key={index}>
                      {index < menu.items.length - 1 && <MenubarSeparator />}
                      <MenubarItem>{item.label}</MenubarItem>
                    </Fragment>
                  ))}
                </MenubarContent>
              </MenubarMenu>
            ))
          }
        </Menubar>
      </div>
      <AlertDialog id="exampleDialog">
        <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>
        <AlertDialogDescription>
          This action cannot be undone. This will permanently delete your account and remove your data from our servers.
        </AlertDialogDescription>
        <AlertDialogFooter>
          <AlertDialogCancel data-dialog-trigger="exampleDialog">Cancel</AlertDialogCancel>
          <AlertDialogAction data-confirm-action="exampleDialog">Continue</AlertDialogAction>
        </AlertDialogFooter>
      </AlertDialog>
      <AlertDialogTrigger dialogId="exampleDialog">Open Alert Dialog</AlertDialogTrigger>
      <Alert title="Heads up!">
        <p>You can add components and dependencies to your app using the cli.</p>
      </Alert>

      <Alert title="Error" variant="destructive">
        <p>Your session has expired. Please log in again.</p>
      </Alert>
      <LogoCarousel />
    </section>
  </main>
</Layout>

<script>
  function handleConfirm(dialogId: string) {
    console.log("Action confirmed!");
    alert("Action confirmed!");
    if (typeof (window as any).toggleDialog === "function") {
      (window as any).toggleDialog(dialogId);
    }
  }

  document.addEventListener("click", (event) => {
    const target = event.target as HTMLElement;
    const confirmAction = target.closest("[data-confirm-action]");
    if (confirmAction) {
      const dialogId = confirmAction.getAttribute("data-confirm-action");
      if (dialogId) {
        handleConfirm(dialogId);
      }
    }
  });
</script>
